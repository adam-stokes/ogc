#!/usr/bin/env python3

import importlib
import pkgutil
from pathlib import Path

import click
import markdown

import frontmatter


def build(modules):
    for mod in modules:
        obj = importlib.import_module(mod)
        click.echo(f"Generating docs - {obj.__name__}")
        if not obj.__doc__:
            continue

        _fm = frontmatter.loads(obj.__doc__)
        if "targets" not in _fm.metadata:
            click.echo("Missing required frontmatter: `targets`, not generating doc page.")
            continue

        content = _fm.content.format(**_fm.metadata)
        if hasattr(obj, '__class_plugin_obj__'):
            content += obj.__class_plugin_obj__.doc_render()
        for target in _fm.metadata["targets"]:
            Path(target).write_text(content, encoding="utf8")


if __name__ == "__main__":
    modules = ["ogc"]
    build(modules)
    modules = [
        f"ogc.{modname}"
        for _, modname, _ in pkgutil.iter_modules(['ogc'])
        if modname != "tests" and modname != "setup"
    ]
    build(modules)

    # Plugins
    plugins = [
        '../ogc-plugins-runner',
        '../ogc-plugins-juju',
        '../ogc-plugins-env'
    ]
    skip_modules = ['test_runner', 'setup', 'punch_version', 'punch_config']
    modules = [
        f"{modname.replace('-', '_')}"
        for _, modname, _ in pkgutil.iter_modules(plugins)
        if modname not in skip_modules
    ]
    build(modules)
