[tool.poetry]
name = "ogc"
version = "2.2.0"
description = "Provisioner, no more, no less."
authors = ["Adam Stokes <51892+adam-stokes@users.noreply.github.com>"]
license = "MIT"
readme = "readme.md"
homepage = "https://github.com/adam-stokes/ogc"
repository = "https://github.com/adam-stokes/ogc"

[tool.poetry.dependencies]
python = "^3.11"
sh = "^1.14.2"
click = "^8.0.4"
python-dotenv = "*"
PyYAML = "^6.0"
melddict = "^1.0.1"
paramiko = "^2.9.2"
Mako = "^1.1.6"
retry = "^0.9.2"
humanfriendly = "^10.0"
colorama = "^0.4.4"
click-didyoumean = "^0.3.0"
rich = ">=10.0.0"
python-slugify = "^6.1.1"
attrs = "^21.4.0"
arrow = "^1.2.2"
pampy = "^0.3.0"
toolz = "^0.11.2"
safetywrap = "^1.5.0"
dill = "*"
tomli = "*"
tomli-w = "^1.0.0"
apache-libcloud = "^3.6.1"
jinja2 = "^3.1.2"
dotty-dict = "^1.3.1"
wrapt-timeout-decorator = "^1.3.12.2"

[tool.poetry.group.dev.dependencies]
pytest-cov = "^4.0.0"

[tool.mypy]
allow_redefinition = false
check_untyped_defs = true
disallow_any_explicit = false
disallow_untyped_calls = true
ignore_errors = false
ignore_missing_imports = true
implicit_reexport = false
local_partial_types = true
strict_optional = true
strict_equality = true
warn_no_return = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unreachable = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_any_unimported = true
warn_return_any = true
warn_unused_ignores = true
no_implicit_optional = true
show_error_codes = true
mypy_path = "ogc"

[tool.isort]
profile = "black"
src_paths = "ogc"
add_imports = "from __future__ import annotations"
atomic = true
line_length = 88

[tool.pytest.ini_options]
addopts = "--tb native -rf -s"
markers = [
    "harness: enables disabling the harness for certain tests"
]
filterwarnings = [
    "ignore::DeprecationWarning"
]

[tool.poetry.dev-dependencies]
black = "^22.2.0"
isort = "^5.10.1"
python-frontmatter = "^1.0.0"
pylint = "^2.12.2"
Pygments = "^2.11.2"
pytest = "^7.0.1"
ipdb = "*"
mypy = "*"
mkdocs = "^1.3.0"
"punch.py" = "^2.0.0"
pymdown-extensions = "^9.3"
click-man = "^0.4.1"
mkdocs-material = "*"
mkdocstrings = "^0.18.1"
mkdocstrings-python-legacy = "^0.2.2"
mkdocs-click = "^0.6.0"
pyre-check = "*"
poethepoet = "*"
types-python-slugify = "*"
types-retry = "*"
types-PyYAML = "*"
types-click = "*"
flake8 = "*"

[tool.poetry.scripts]
ogc = "ogc.commands.base:start"

[tool.poe.tasks]
clean = """
rm -rf site build dist ogc.egg-info __pycache__ artifacts
"""
_git-commit = "git commit -asm 'Next Release'"
_git-push = "git push"
_git-push-tags = "git push --tags"
_publish = "poetry publish --build -u ${PYPI_USER} -p ${PYPI_PASS}"
bump-rev = "punch --part patch"
fix = ["isort", "format"]
format = "black ."
isort  = "isort ."
lint   = "pylint ogc tests"
mypy   = "mypy ogc maint"
publish-docs = "mkdocs gh-deploy"
pyre   = "pyre --search-path \"$(python -c 'import site; print(site.getsitepackages()[0])')\""
pytest = "pytest --cov=ogc"
release = ["clean", "isort", "format", "bump-rev", "publish-docs"]
serve-docs  = "mkdocs serve"
test = ["pyre", "mypy", "lint", "pytest"]


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
