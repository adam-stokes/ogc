meta:
  name: Verify CK
  synopsis:
    - summary: Running the base validation suite against a deployed Kubernetes
      code: |
        ```
        # edit spec.yml and update the appropriate vars under the `env:` section
        > ogc --spec jobs/validate/spec.yml -t core
        ```
  description: |
    Verifies that CK passes integration tests
  mkdocs:
    destination:
      - "validations/ck/index.md"
    jenkins-job-builder:
      jobs:
        - jobs/ci-master.yaml
        - jobs/validate.yaml

matrix:
  snap_version:
    - 1.18/edge
    - 1.17/edge
    - 1.17/stable
    - 1.16/edge
    - 1.15/edge
  series:
    - focal
    - bionic
    - xenial
  channel:
    - edge
    - stable
  arch:
    - amd64
    - arm64

plan:
  env:
    - JUJU_DEPLOY_BUNDLE=cs:~containers/charmed-kubernetes
    - JUJU_DEPLOY_CHANNEL=$CHANNEL
    - JUJU_CLOUD=aws/us-east-1
    - JUJU_CONTROLLER=validate-ck-$SERIES
    - JUJU_MODEL=validate-model

  backends: [juju/mem=16G,cores=16,root-disk=100G]

  provisioner:
    rsync:
      src: files/files*
      dst: /home/ubuntu/.
    shell: |
      sudo apt-get remove lxd lxd-client
      sudo snap install juju --classic

  execute: |
    #!/bin/bash
    set -x

    if ! juju destroy-controller -y --destroy-all-models --destroy-storage $JUJU_CONTROLLER 2>&1; then
      juju kill-controller -y $JUJU_CONTROLLER 2>&1
    fi

    juju bootstrap $JUJU_CLOUD $JUJU_CONTROLLER \
         -d $JUJU_MODEL \
         --bootstrap-series $SERIES \
         --force \
         --bootstrap-constraints 'arch=$ARCH' \
         {% if series == 'focal' %}
         --model-default image-stream=daily \
         {% endif %}
         --model-default test-mode=true \
         --model-default resource-tags=owner=k8sci

    tee overlay.yaml <<EOF
    applications:
      kubernetes-master:
        options:
          channel: $SNAP_VERSION
      kubernetes-worker:
        options:
          channel: $SNAP_VERSION
    EOF

    juju deploy -m $JUJU_CONTROLLER:$JUJU_MODEL \
          --series $SERIES \
          --force \
          --overlay overlay.yaml \
          --channel $JUJU_DEPLOY_CHANNEL $JUJU_DEPLOY_BUNDLE

    juju-wait -e $JUJU_CONTROLLER:$JUJU_MODEL -w

    pytest -m "not slow" jobs/integration/validation.py \
       --cloud $JUJU_CLOUD \
       --model $JUJU_MODEL \
       --controller $JUJU_CONTROLLER
