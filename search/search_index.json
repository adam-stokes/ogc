{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"OGC \u00b6 ogc - provisioning, that\u2019s it. Getting Started \u00b6 Welcome to the getting started guide! This should be a quick introduction to get up and running with OGC. More information on customizing and extending OGC can be found in the user documentation. Setup \u00b6 OGC requires Redis and Postgres to function. The easiest way to fulfill these requirements is with docker-compose : version : \"3.9\" services : redis : image : \"redis:6.2-alpine\" restart : always volumes : - \"redis:/data\" ports : - '6379:6379' postgres : image : postgres:11 environment : - POSTGRES_DB=ogc - POSTGRES_USER=postgres - POSTGRES_PASSWORD=postgres healthcheck : test : [ \"CMD\" , \"pg_isready\" , \"-U\" , \"postgres\" ] retries : 300 interval : 1s ports : - '5432:5432' volumes : redis : {} Bring up the services $ docker-compose up Next , is installation of OGC. We use poetry : $ pip install poetry == 1 .1.12 $ poetry install Provider Setup \u00b6 OGC currently supports AWS and GCP out of the box (more added soon). In order for OGC to connect and deploy to these clouds a few environment variables are needed. Create a .env file in the top level directory where ogc is to be run: AWS_ACCESS_KEY_ID=\"\" AWS_SECRET_ACCESS_KEY=\"\" AWS_REGION=\"us-east-2\" GOOGLE_APPLICATION_CREDENTIALS=\"svc.json\" GOOGLE_APPLICATION_SERVICE_ACCOUNT=\"..@...iam.gserviceaccount.com\" GOOGLE_PROJECT=\"example-project\" GOOGLE_DATACENTER=\"us-central1-a\" Create a provision specification \u00b6 Once setup is complete, a provision specification is needed. This defines ssh keys and one or more layouts to be provisioned. Create a file ogc.yml and place in the top level directory where ogc is run: name : ci # SSH Keys must be passwordless ssh-keys : public : ~/.ssh/id_rsa_libcloud.pub private : ~/.ssh/id_rsa_libcloud layouts : elastic-agent-sles : runs-on : sles-15 instance-size : e2-standard-8 username : root scripts : fixtures/ex_deploy_sles provider : google scale : 5 remote-path : /root/ogc include : - .ogc-cache exclude : - .git - .venv artifacts : /root/output/*.xml tags : - elastic-agent-8.1.x - sles-gcp This specification tells OGC to deploy 5 nodes running on Google\u2019s e2-standard-8 with SUSE 15 OS. The scripts section tells OGC where the template files/scripts are located that need to be uploaded to each node during the deployment phase. Provision and Deploy \u00b6 OGC uses a client/server architecture to better handle scaling and concurrency needs. A celery server needs to be available prior launching nodes: $ ogc server Note : An alternative is to run this process in a separate docker container. Once the specification is set, environment variables configured and celery is running, execute a deployment in a new terminal: $ ogc launch Note : If the file is something other than ogc.yml append the --spec option to the launch command: $ ogc launch --spec my-custom-provision.yml Next steps \u00b6 Learn how to navigate your deployments in our User Guide - Navigating a deployment","title":"Getting Started"},{"location":"#ogc","text":"ogc - provisioning, that\u2019s it.","title":"OGC"},{"location":"#getting-started","text":"Welcome to the getting started guide! This should be a quick introduction to get up and running with OGC. More information on customizing and extending OGC can be found in the user documentation.","title":"Getting Started"},{"location":"#setup","text":"OGC requires Redis and Postgres to function. The easiest way to fulfill these requirements is with docker-compose : version : \"3.9\" services : redis : image : \"redis:6.2-alpine\" restart : always volumes : - \"redis:/data\" ports : - '6379:6379' postgres : image : postgres:11 environment : - POSTGRES_DB=ogc - POSTGRES_USER=postgres - POSTGRES_PASSWORD=postgres healthcheck : test : [ \"CMD\" , \"pg_isready\" , \"-U\" , \"postgres\" ] retries : 300 interval : 1s ports : - '5432:5432' volumes : redis : {} Bring up the services $ docker-compose up Next , is installation of OGC. We use poetry : $ pip install poetry == 1 .1.12 $ poetry install","title":"Setup"},{"location":"#provider-setup","text":"OGC currently supports AWS and GCP out of the box (more added soon). In order for OGC to connect and deploy to these clouds a few environment variables are needed. Create a .env file in the top level directory where ogc is to be run: AWS_ACCESS_KEY_ID=\"\" AWS_SECRET_ACCESS_KEY=\"\" AWS_REGION=\"us-east-2\" GOOGLE_APPLICATION_CREDENTIALS=\"svc.json\" GOOGLE_APPLICATION_SERVICE_ACCOUNT=\"..@...iam.gserviceaccount.com\" GOOGLE_PROJECT=\"example-project\" GOOGLE_DATACENTER=\"us-central1-a\"","title":"Provider Setup"},{"location":"#create-a-provision-specification","text":"Once setup is complete, a provision specification is needed. This defines ssh keys and one or more layouts to be provisioned. Create a file ogc.yml and place in the top level directory where ogc is run: name : ci # SSH Keys must be passwordless ssh-keys : public : ~/.ssh/id_rsa_libcloud.pub private : ~/.ssh/id_rsa_libcloud layouts : elastic-agent-sles : runs-on : sles-15 instance-size : e2-standard-8 username : root scripts : fixtures/ex_deploy_sles provider : google scale : 5 remote-path : /root/ogc include : - .ogc-cache exclude : - .git - .venv artifacts : /root/output/*.xml tags : - elastic-agent-8.1.x - sles-gcp This specification tells OGC to deploy 5 nodes running on Google\u2019s e2-standard-8 with SUSE 15 OS. The scripts section tells OGC where the template files/scripts are located that need to be uploaded to each node during the deployment phase.","title":"Create a provision specification"},{"location":"#provision-and-deploy","text":"OGC uses a client/server architecture to better handle scaling and concurrency needs. A celery server needs to be available prior launching nodes: $ ogc server Note : An alternative is to run this process in a separate docker container. Once the specification is set, environment variables configured and celery is running, execute a deployment in a new terminal: $ ogc launch Note : If the file is something other than ogc.yml append the --spec option to the launch command: $ ogc launch --spec my-custom-provision.yml","title":"Provision and Deploy"},{"location":"#next-steps","text":"Learn how to navigate your deployments in our User Guide - Navigating a deployment","title":"Next steps"},{"location":"user-guide/navigating-nodes/","text":"Navigating a Deployment \u00b6 Learn how to list, inspect, access and debug your node deployments. Listing Nodes \u00b6 To list nodes in your deployment, run the following: $ ogc ls Which gives a table output of current node deployments: \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513 \u2503 10 Nodes \u2503 Name \u2503 Status \u2503 Connection \u2503 Tags \u2503 Actions \u2503 \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529 \u2502 20 \u2502 ogc-87ba30fc-elastic-agent-sles \u2502 running \u2502 ssh -i /Users/adam/.ssh/id_rsa_libcloud root@34.123.103.9 \u2502 elastic-agent-8.1.x, \u2502 pass: \u2714 fail: 0 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 sles-gcp \u2502 \u2502 \u2502 34 \u2502 ogc-b3befadc-elastic-agent-ubuntu \u2502 running \u2502 ssh -i /Users/adam/.ssh/id_rsa_libcloud root@35.184.43.81 \u2502 elastic-agent-8.1.x, \u2502 pass: \u2714 fail: 0 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 ubuntu-gcp \u2502 \u2502 \u2502 35 \u2502 ogc-d54a5848-elastic-agent-ubuntu \u2502 running \u2502 ssh -i /Users/adam/.ssh/id_rsa_libcloud root@34.121.133.188 \u2502 elastic-agent-8.1.x, \u2502 pass: \u2714 fail: 0 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 ubuntu-gcp \u2502 \u2502 \u2502 36 \u2502 ogc-cbb9d5bc-elastic-agent-ubuntu \u2502 running \u2502 ssh -i /Users/adam/.ssh/id_rsa_libcloud root@34.67.108.205 \u2502 elastic-agent-8.1.x, \u2502 pass: \u2714 fail: 0 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 ubuntu-gcp \u2502 \u2502 \u2502 21 \u2502 ogc-51b971ad-elastic-agent-sles \u2502 running \u2502 ssh -i /Users/adam/.ssh/id_rsa_libcloud root@35.239.181.14 \u2502 elastic-agent-8.1.x, \u2502 pass: \u2714 fail: 0 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 sles-gcp \u2502 \u2502 \u2502 22 \u2502 ogc-c4f812b7-elastic-agent-sles \u2502 running \u2502 ssh -i /Users/adam/.ssh/id_rsa_libcloud root@35.184.34.2 \u2502 elastic-agent-8.1.x, \u2502 pass: \u2714 fail: 0 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 sles-gcp \u2502 \u2502 \u2502 23 \u2502 ogc-7c8cb271-elastic-agent-sles \u2502 running \u2502 ssh -i /Users/adam/.ssh/id_rsa_libcloud root@34.72.237.134 \u2502 elastic-agent-8.1.x, \u2502 pass: \u2714 fail: 0 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 sles-gcp \u2502 \u2502 \u2502 24 \u2502 ogc-d4467204-elastic-agent-sles \u2502 running \u2502 ssh -i /Users/adam/.ssh/id_rsa_libcloud root@34.132.30.47 \u2502 elastic-agent-8.1.x, \u2502 pass: \u2714 fail: 0 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 sles-gcp \u2502 \u2502 \u2502 37 \u2502 ogc-92f1c5ec-elastic-agent-ubuntu \u2502 running \u2502 ssh -i /Users/adam/.ssh/id_rsa_libcloud root@104.197.37.199 \u2502 elastic-agent-8.1.x, \u2502 pass: \u2714 fail: 0 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 ubuntu-gcp \u2502 \u2502 \u2502 38 \u2502 ogc-d7cd61a7-elastic-agent-ubuntu \u2502 running \u2502 ssh -i /Users/adam/.ssh/id_rsa_libcloud root@35.225.239.252 \u2502 elastic-agent-8.1.x, \u2502 pass: \u2714 fail: 0 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 ubuntu-gcp \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 You can further drill down with a couple of options: To filter by-tag run: $ ogc ls --by-tag ubuntu-gcp \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513 \u2503 5 Nodes \u2503 Name \u2503 Status \u2503 Connection \u2503 Tags \u2503 Actions \u2503 \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529 \u2502 34 \u2502 ogc-b3befadc-elastic-agent-ubuntu \u2502 running \u2502 ssh -i /Users/adam/.ssh/id_rsa_libcloud root@35.184.43.81 \u2502 elastic-agent-8.1.x, \u2502 pass: \u2714 fail: 0 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 ubuntu-gcp \u2502 \u2502 \u2502 35 \u2502 ogc-d54a5848-elastic-agent-ubuntu \u2502 running \u2502 ssh -i /Users/adam/.ssh/id_rsa_libcloud root@34.121.133.188 \u2502 elastic-agent-8.1.x, \u2502 pass: \u2714 fail: 0 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 ubuntu-gcp \u2502 \u2502 \u2502 36 \u2502 ogc-cbb9d5bc-elastic-agent-ubuntu \u2502 running \u2502 ssh -i /Users/adam/.ssh/id_rsa_libcloud root@34.67.108.205 \u2502 elastic-agent-8.1.x, \u2502 pass: \u2714 fail: 0 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 ubuntu-gcp \u2502 \u2502 \u2502 37 \u2502 ogc-92f1c5ec-elastic-agent-ubuntu \u2502 running \u2502 ssh -i /Users/adam/.ssh/id_rsa_libcloud root@104.197.37.199 \u2502 elastic-agent-8.1.x, \u2502 pass: \u2714 fail: 0 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 ubuntu-gcp \u2502 \u2502 \u2502 38 \u2502 ogc-d7cd61a7-elastic-agent-ubuntu \u2502 running \u2502 ssh -i /Users/adam/.ssh/id_rsa_libcloud root@35.225.239.252 \u2502 elastic-agent-8.1.x, \u2502 pass: \u2714 fail: 0 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 ubuntu-gcp \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Accessing nodes \u00b6 OGC provides a helper command for easily accessing any of the nodes in your deployment. To login to one of the above nodes ogc-d7cd61a7-elastic-agent-ubuntu run: $ ogc ssh ogc-d7cd61a7-elastic-agent-ubuntu ... ssh output ... root@ogc-d7cd61a7-elastic-agent-ubuntu:~# Executing commands \u00b6 Running arbitrary commands can be accomplished with: $ ogc exec --by-name ogc-d7cd61a7-elastic-agent-ubuntu 'ls -l /' Or if tags are defined, run a command across a set of machines: $ ogc exec --by-tag ubuntu-gcp 'touch this_is_an_ubuntu_machine.txt' Inspecting nodes \u00b6 Each action performed on a node is tracked. This allows you to quickly investigate why scripts failed. To inspect a node and see action results run: $ ogc inspect --id 38 This will return the following output: Deploy Details: ogc-d7cd61a7-elastic-agent-ubuntu [3] Successful Actions: (id: 90) Out: 2022-03-24 12:37:08.657289 '/usr/local/bin/pacman' -> '/usr/local/bin/pacapt' Reading package lists... Building dependency tree... Reading state information... nano is already the newest version (2.9.3-2). nano set to manually installed. The following package was automatically installed and is no longer required: libnuma1 Use 'apt autoremove' to remove it. 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded. If multiple actions exist, further drill down into the action you want ( seen here \u201c(id: 90) Out: 2022-03-24 12:37:08.\u201d in our example ): $ ogc inspect --id 38 --action-id 90 Destroying nodes \u00b6 OGC allows destroying of individual or a full blown cleanup. To remove a single node we run: $ ogc rm ogc-d7cd61a7-elastic-agent-ubuntu --force Or if we wanted to do a full teardown, run: $ ogc rm-all --force","title":"Navigating a deployment"},{"location":"user-guide/navigating-nodes/#navigating-a-deployment","text":"Learn how to list, inspect, access and debug your node deployments.","title":"Navigating a Deployment"},{"location":"user-guide/navigating-nodes/#listing-nodes","text":"To list nodes in your deployment, run the following: $ ogc ls Which gives a table output of current node deployments: \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513 \u2503 10 Nodes \u2503 Name \u2503 Status \u2503 Connection \u2503 Tags \u2503 Actions \u2503 \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529 \u2502 20 \u2502 ogc-87ba30fc-elastic-agent-sles \u2502 running \u2502 ssh -i /Users/adam/.ssh/id_rsa_libcloud root@34.123.103.9 \u2502 elastic-agent-8.1.x, \u2502 pass: \u2714 fail: 0 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 sles-gcp \u2502 \u2502 \u2502 34 \u2502 ogc-b3befadc-elastic-agent-ubuntu \u2502 running \u2502 ssh -i /Users/adam/.ssh/id_rsa_libcloud root@35.184.43.81 \u2502 elastic-agent-8.1.x, \u2502 pass: \u2714 fail: 0 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 ubuntu-gcp \u2502 \u2502 \u2502 35 \u2502 ogc-d54a5848-elastic-agent-ubuntu \u2502 running \u2502 ssh -i /Users/adam/.ssh/id_rsa_libcloud root@34.121.133.188 \u2502 elastic-agent-8.1.x, \u2502 pass: \u2714 fail: 0 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 ubuntu-gcp \u2502 \u2502 \u2502 36 \u2502 ogc-cbb9d5bc-elastic-agent-ubuntu \u2502 running \u2502 ssh -i /Users/adam/.ssh/id_rsa_libcloud root@34.67.108.205 \u2502 elastic-agent-8.1.x, \u2502 pass: \u2714 fail: 0 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 ubuntu-gcp \u2502 \u2502 \u2502 21 \u2502 ogc-51b971ad-elastic-agent-sles \u2502 running \u2502 ssh -i /Users/adam/.ssh/id_rsa_libcloud root@35.239.181.14 \u2502 elastic-agent-8.1.x, \u2502 pass: \u2714 fail: 0 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 sles-gcp \u2502 \u2502 \u2502 22 \u2502 ogc-c4f812b7-elastic-agent-sles \u2502 running \u2502 ssh -i /Users/adam/.ssh/id_rsa_libcloud root@35.184.34.2 \u2502 elastic-agent-8.1.x, \u2502 pass: \u2714 fail: 0 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 sles-gcp \u2502 \u2502 \u2502 23 \u2502 ogc-7c8cb271-elastic-agent-sles \u2502 running \u2502 ssh -i /Users/adam/.ssh/id_rsa_libcloud root@34.72.237.134 \u2502 elastic-agent-8.1.x, \u2502 pass: \u2714 fail: 0 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 sles-gcp \u2502 \u2502 \u2502 24 \u2502 ogc-d4467204-elastic-agent-sles \u2502 running \u2502 ssh -i /Users/adam/.ssh/id_rsa_libcloud root@34.132.30.47 \u2502 elastic-agent-8.1.x, \u2502 pass: \u2714 fail: 0 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 sles-gcp \u2502 \u2502 \u2502 37 \u2502 ogc-92f1c5ec-elastic-agent-ubuntu \u2502 running \u2502 ssh -i /Users/adam/.ssh/id_rsa_libcloud root@104.197.37.199 \u2502 elastic-agent-8.1.x, \u2502 pass: \u2714 fail: 0 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 ubuntu-gcp \u2502 \u2502 \u2502 38 \u2502 ogc-d7cd61a7-elastic-agent-ubuntu \u2502 running \u2502 ssh -i /Users/adam/.ssh/id_rsa_libcloud root@35.225.239.252 \u2502 elastic-agent-8.1.x, \u2502 pass: \u2714 fail: 0 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 ubuntu-gcp \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 You can further drill down with a couple of options: To filter by-tag run: $ ogc ls --by-tag ubuntu-gcp \u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513 \u2503 5 Nodes \u2503 Name \u2503 Status \u2503 Connection \u2503 Tags \u2503 Actions \u2503 \u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529 \u2502 34 \u2502 ogc-b3befadc-elastic-agent-ubuntu \u2502 running \u2502 ssh -i /Users/adam/.ssh/id_rsa_libcloud root@35.184.43.81 \u2502 elastic-agent-8.1.x, \u2502 pass: \u2714 fail: 0 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 ubuntu-gcp \u2502 \u2502 \u2502 35 \u2502 ogc-d54a5848-elastic-agent-ubuntu \u2502 running \u2502 ssh -i /Users/adam/.ssh/id_rsa_libcloud root@34.121.133.188 \u2502 elastic-agent-8.1.x, \u2502 pass: \u2714 fail: 0 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 ubuntu-gcp \u2502 \u2502 \u2502 36 \u2502 ogc-cbb9d5bc-elastic-agent-ubuntu \u2502 running \u2502 ssh -i /Users/adam/.ssh/id_rsa_libcloud root@34.67.108.205 \u2502 elastic-agent-8.1.x, \u2502 pass: \u2714 fail: 0 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 ubuntu-gcp \u2502 \u2502 \u2502 37 \u2502 ogc-92f1c5ec-elastic-agent-ubuntu \u2502 running \u2502 ssh -i /Users/adam/.ssh/id_rsa_libcloud root@104.197.37.199 \u2502 elastic-agent-8.1.x, \u2502 pass: \u2714 fail: 0 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 ubuntu-gcp \u2502 \u2502 \u2502 38 \u2502 ogc-d7cd61a7-elastic-agent-ubuntu \u2502 running \u2502 ssh -i /Users/adam/.ssh/id_rsa_libcloud root@35.225.239.252 \u2502 elastic-agent-8.1.x, \u2502 pass: \u2714 fail: 0 \u2502 \u2502 \u2502 \u2502 \u2502 \u2502 ubuntu-gcp \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518","title":"Listing Nodes"},{"location":"user-guide/navigating-nodes/#accessing-nodes","text":"OGC provides a helper command for easily accessing any of the nodes in your deployment. To login to one of the above nodes ogc-d7cd61a7-elastic-agent-ubuntu run: $ ogc ssh ogc-d7cd61a7-elastic-agent-ubuntu ... ssh output ... root@ogc-d7cd61a7-elastic-agent-ubuntu:~#","title":"Accessing nodes"},{"location":"user-guide/navigating-nodes/#executing-commands","text":"Running arbitrary commands can be accomplished with: $ ogc exec --by-name ogc-d7cd61a7-elastic-agent-ubuntu 'ls -l /' Or if tags are defined, run a command across a set of machines: $ ogc exec --by-tag ubuntu-gcp 'touch this_is_an_ubuntu_machine.txt'","title":"Executing commands"},{"location":"user-guide/navigating-nodes/#inspecting-nodes","text":"Each action performed on a node is tracked. This allows you to quickly investigate why scripts failed. To inspect a node and see action results run: $ ogc inspect --id 38 This will return the following output: Deploy Details: ogc-d7cd61a7-elastic-agent-ubuntu [3] Successful Actions: (id: 90) Out: 2022-03-24 12:37:08.657289 '/usr/local/bin/pacman' -> '/usr/local/bin/pacapt' Reading package lists... Building dependency tree... Reading state information... nano is already the newest version (2.9.3-2). nano set to manually installed. The following package was automatically installed and is no longer required: libnuma1 Use 'apt autoremove' to remove it. 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded. If multiple actions exist, further drill down into the action you want ( seen here \u201c(id: 90) Out: 2022-03-24 12:37:08.\u201d in our example ): $ ogc inspect --id 38 --action-id 90","title":"Inspecting nodes"},{"location":"user-guide/navigating-nodes/#destroying-nodes","text":"OGC allows destroying of individual or a full blown cleanup. To remove a single node we run: $ ogc rm ogc-d7cd61a7-elastic-agent-ubuntu --force Or if we wanted to do a full teardown, run: $ ogc rm-all --force","title":"Destroying nodes"}]}